<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>A curious mind...</title><link>http://michaelaye.blogspot.com/</link><description></description><language>en</language><lastBuildDate>Mon, 04 Aug 2014 22:23:49 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Fernando Perez: An ambitious experiment in Data Science takes off:...</title><link>http://michaelaye.blogspot.com/posts/201311fernando-perez-ambitious-experiment-in.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;a href="http://blog.fperez.org/2013/11/an-ambitious-experiment-in-data-science.html?spref=bl"&gt;Fernando Perez: An ambitious experiment in Data Science takes off:...&lt;/a&gt;: Today, during a White House OSTP event  combining government, academia and industry, the Gordon and Betty Moore Foundation and the Alfred P...</description><guid>http://michaelaye.blogspot.com/posts/201311fernando-perez-ambitious-experiment-in.html</guid><pubDate>Wed, 13 Nov 2013 23:19:00 GMT</pubDate></item><item><title>Everything 3D: Positioning the Camera in Blender the Pro Way</title><link>http://michaelaye.blogspot.com/posts/201309everything-3d-positioning-camera-in.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;a href="http://www.andreucabre.com/2012/02/positioning-camera-in-blender-pro-way.html"&gt;Everything 3D: Positioning the Camera in Blender the Pro Way&lt;/a&gt;</description><guid>http://michaelaye.blogspot.com/posts/201309everything-3d-positioning-camera-in.html</guid><pubDate>Mon, 09 Sep 2013 10:22:00 GMT</pubDate></item><item><title>Those funny offset numbers in matplotlib</title><link>http://michaelaye.blogspot.com/posts/201309those-funny-offset-numbers-in-matplotlib.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;If you are a heavy matplotlib user, you are bound to have seen the funny offset numbers in the top left of the plot window:&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-JWVf7z8w_Yc/UiZhRFt-7qI/AAAAAAAAIQk/uGIXoX-LtKM/s1600/Screen+Shot+2013-09-03+at+15.22.05+.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="272" src="http://2.bp.blogspot.com/-JWVf7z8w_Yc/UiZhRFt-7qI/AAAAAAAAIQk/uGIXoX-LtKM/s320/Screen+Shot+2013-09-03+at+15.22.05+.png" width="320"&gt;&lt;/a&gt;&lt;/div&gt;They are obviously there to help the viewer focus on the level where the numbers are really changing, removing the area where there's no change happening.&lt;br&gt;&lt;br&gt;But I am claiming that due to pattern recognition, there are quite a few cases where this confuses more than it helps. In this example I (and the people in my team) are used to see 5-digit numbers and it takes quite some time to figure out here, that these are indeed 5-digit numbers.&lt;br&gt;&lt;br&gt;Therefore I researched how to switch this behavior off.&lt;br&gt;&lt;br&gt;&lt;br&gt;First, one imports the ScalarFormatter class from the matplotlib.ticker module:&lt;br&gt;&lt;br&gt;&lt;blockquote class="tr_bq"&gt;from matplotlib.ticker import ScalarFormatter&lt;/blockquote&gt;Then, one creates a formatter object with the use of offset numbers switched off:&lt;br&gt;&lt;br&gt;&lt;blockquote class="tr_bq"&gt;y_formatter = ScalarFormatter(useOffset=False)&lt;/blockquote&gt;&lt;br&gt;Finally, you apply it to an axis object that you either receive via the fig.subplot() command, via plt.gca() (acronym for Get Current Axis) or you catch it when it is being returned after a plot command:&lt;br&gt;&lt;br&gt;&lt;blockquote class="tr_bq"&gt;ax.yaxis.set_major_formatter(y_formatter)&lt;/blockquote&gt;There you go, hope this helps someone.&lt;br&gt;&lt;br&gt;&lt;a href="http://stackoverflow.com/questions/3677368/matplotlib-format-axis-offset-values-to-whole-numbers-or-specific-number"&gt;Here&lt;/a&gt; is the stackoverflow issue that helped me to find the solution.&lt;br&gt;&lt;br&gt;&lt;u&gt;Update (2013-10-20) :&lt;/u&gt;&lt;br&gt;&lt;br&gt;An easier way is to catch the axis object from the plot command and apply the following command:&lt;br&gt;&lt;blockquote class="tr_bq"&gt;ax.ticklabel_format(useOffset=False)&lt;/blockquote&gt;I &lt;a href="http://stackoverflow.com/questions/18704308/useoffset-false-in-config-file"&gt;initiated&lt;/a&gt; a &lt;a href="https://github.com/matplotlib/matplotlib/issues/2400"&gt;github issue&lt;/a&gt; to have this included in matplotlib, which has been responded already with a solution, so this will be configurable in the future, yay!&lt;br&gt;&lt;br&gt;&lt;u&gt;Update 2, same day:&lt;/u&gt;&lt;br&gt;Weird, I thought I had the above shortcut working at some time, now it doesn't. If anyone knows the circumstance under this can work and can not, please comment.&lt;/div&gt;</description><guid>http://michaelaye.blogspot.com/posts/201309those-funny-offset-numbers-in-matplotlib.html</guid><pubDate>Tue, 03 Sep 2013 23:31:00 GMT</pubDate></item><item><title>polyfit</title><link>http://michaelaye.blogspot.com/posts/201306polyfit.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;A follow-up to the previous post.&lt;br&gt;&lt;br&gt;Polynomial fitting is also very easy with the numpy packages polyfit and poly1d.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;In [196]: x = range(100)&lt;br&gt;In [197]: y = randn(100)&lt;br&gt;In [198]: plot(x,y)&lt;br&gt;Out[198]: []&lt;/blockquote&gt;Here I am asking polyfit to fit me a 2nd degree polynomial.&lt;br&gt;&lt;blockquote&gt;In [199]: polyfit(x,y,2)&lt;br&gt;Out[199]: array([-0.00018313,  0.01669275, -0.09621319])&lt;/blockquote&gt;The polyfit function returns the polynomial coefficients in a list.&lt;br&gt;If I want to use them directly as a fit function, just embed them in a new polynomial object:&lt;br&gt;&lt;blockquote&gt;In [200]: fitfunc = poly1d(polyfit(x,y,2))&lt;br&gt;In [201]: plot(x,fitfunc(x))&lt;br&gt;Out[201]: []&lt;/blockquote&gt;Saving the plot like this&lt;br&gt;&lt;blockquote&gt;In [202]: savefig('/Users/maye/Desktop/blog_polyfit.png')&lt;/blockquote&gt;&lt;div&gt;and looks like this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-rnC7uQD6xKc/Ua5u7uN3NQI/AAAAAAAAIIo/HTbo7T4EIA8/s1600/blog_polyfit.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="480" src="http://3.bp.blogspot.com/-rnC7uQD6xKc/Ua5u7uN3NQI/AAAAAAAAIIo/HTbo7T4EIA8/s640/blog_polyfit.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Python</category><category>scientific programming</category><guid>http://michaelaye.blogspot.com/posts/201306polyfit.html</guid><pubDate>Tue, 04 Jun 2013 23:49:00 GMT</pubDate></item><item><title>Polynomials with Python</title><link>http://michaelaye.blogspot.com/posts/201305polynoms-with-python.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;&lt;div class="tr_bq"&gt;Seriously, can it be any easier? ;)&lt;/div&gt;&lt;br&gt;If you are not in a pylab session, import the module like this:&lt;br&gt;&lt;blockquote&gt;In [148]: from numpy import poly1d&lt;/blockquote&gt; Otherwise, just "import poly1d" should work.&lt;br&gt;Now let's get a polynomial for the coefficients of [3,2,1] (always in decreasing order!):&lt;br&gt;&lt;blockquote&gt;In [149]: p = poly1d([3,2,1])&lt;/blockquote&gt;Printing it provides a semi-analytical printout:&lt;br&gt;&lt;blockquote&gt;In [150]: print p&lt;br&gt;   2&lt;br&gt;3 x + 2 x + 1&lt;/blockquote&gt;Applying new x values to it is easy, because the poly1d object is a function:&lt;br&gt;&lt;blockquote&gt;In [152]: newx = linspace(0,10,10)&lt;br&gt;In [153]: p(newx)&lt;br&gt;Out[153]:&lt;br&gt;array([   1.        ,    6.92592593,   20.25925926,   41.        ,&lt;br&gt;         69.14814815,  104.7037037 ,  147.66666667,  198.03703704,&lt;br&gt;        255.81481481,  321.        ])&lt;/blockquote&gt;Lots of other things are possible with this object. IPython's object inspection makes it easy to discover them:&lt;br&gt;&lt;blockquote&gt;In [154]: p.&lt;br&gt;p.coeffs    p.deriv     p.integ     p.order     p.variable&lt;br&gt;&lt;br&gt;In [155]: p.deriv()&lt;br&gt;Out[155]: poly1d([6, 2])&lt;br&gt;In [156]: pderiv = p.deriv()&lt;br&gt;In [157]: print pderiv&lt;br&gt;6 x + 2&lt;/blockquote&gt;Roots for this polynomial can be either determined by the roots function that is imported in a pylab session (or importable like from numpy import roots)&lt;br&gt;&lt;blockquote&gt;In [158]: roots(p)&lt;br&gt;Out[158]: array([-0.33333333+0.47140452j, -0.33333333-0.47140452j])&lt;br&gt;In [159]: p.r&lt;br&gt;Out[159]: array([-0.33333333+0.47140452j, -0.33333333-0.47140452j])&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;PS: One of these days I really have to find out how to do code high-lighting in Blogger, or, preferably, go all the way and do IPython notebook posts.&lt;/div&gt;</description><category>Python</category><category>scientific programming</category><guid>http://michaelaye.blogspot.com/posts/201305polynoms-with-python.html</guid><pubDate>Fri, 31 May 2013 17:28:00 GMT</pubDate></item><item><title>Comfort at 1 AU</title><link>http://michaelaye.blogspot.com/posts/201110comfort-at-1-au.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;a href="http://oneau.wordpress.com/2011/02/28/simple-statistics-with-scipy/"&gt;http://oneau.wordpress.com/2011/02/28/simple-statistics-with-scipy/&lt;/a&gt;</description><guid>http://michaelaye.blogspot.com/posts/201110comfort-at-1-au.html</guid><pubDate>Wed, 05 Oct 2011 15:43:00 GMT</pubDate></item><item><title>A scientific Python starter</title><link>http://michaelaye.blogspot.com/posts/201102scientific-python-starter.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;p&gt;As requested by some, here is a list of important websites, doc-sites and modules for a successful start in Python.&lt;br&gt;&lt;br&gt;1. Getting Python&lt;br&gt;If there's one problem with Python, it is how some of the available modules depend on other modules to be the right version. Therefore I recommend wholeheartedly to install big packages that include all the modules you need as one big chunk.&lt;br&gt;I personally made good experiences with &lt;a href="http://www.enthought.com/"&gt;http://www.enthought.com&lt;/a&gt;., they provide academic licenses for free and also offer 64-bit version free on personal email request (they did for me at least).&lt;br&gt;There are other packages like PythonXY, but I think Enthought is the only one, that creates a package for Mac, Windows AND Linux.&lt;br&gt;&lt;br&gt;2. First steps&lt;br&gt;The tutorial on &lt;a href="http://docs.python.org/"&gt;http://docs.python.org&lt;/a&gt; is really excellent! When I worked through it years ago, I continued the next day with Python GUI programming tutorials and was coding my own graphical user interfaces with Python within 1 day! The clarity of Python enables this, I believe. Haven't learned a language before that is that easy to learn (and I used BASIC, C, C++, FORTRAN77, Java and IDL).&lt;br&gt;&lt;br&gt;Read the tutorial until inclusive section 5 (Data Structures, up to here is a MUST!) and then you can go on for now to the scientific tutorials, but if you feel puzzled sometime later you really should continue this tutorial at least until section 9 inclusive to see what classes are all about and, important, how to read files in section 7).&lt;br&gt;&lt;br&gt;3. A warning for IDL switchers:&lt;br&gt;Before we go on to Sciency stuff in Python, a warning:&lt;br&gt;&lt;br&gt;If you do this in IDL:&lt;br&gt;a = [1,2,3]&lt;br&gt;b = a&lt;br&gt;&lt;br&gt;then you have a new array b, copied from a, and you can do what you want with it without influence on a.&lt;br&gt;This has advantages for ease of use, but makes your IDL very fast very slow, because you carry your data around multiple times after a while.&lt;br&gt;As Python is a real programming language, it tries to be memory efficient and it does so, by avoiding copies if not explicitly asked for.&lt;br&gt;So in Python when you do:&lt;br&gt;&lt;br&gt;a = [1,2,3]&lt;br&gt;b = a&lt;br&gt;&lt;br&gt;then you don't get a copy but a link to the a-array. So if you do b[0]=4, 'a' has changed as well! (Try it out!)&lt;br&gt;So what do you do, if you really want a copy without changing the original?&lt;br&gt;Well, you ask for a copy:&lt;br&gt;b = a.copy()&lt;br&gt;&lt;br&gt;4. Numpy and Scipy&lt;br&gt;Now on to the most import Python modules for scientists called 'numpy' and 'scipy'.&lt;br&gt;Scipy uses Numpy so they are closely linked.&lt;br&gt;&lt;br&gt;The documentation for both can be found here:&lt;br&gt;&lt;a href="http://docs.scipy.org/doc/"&gt;http://docs.scipy.org/doc/&lt;/a&gt; or just start some browsing around at &lt;a href="http://www.scipy.org/"&gt;http://www.scipy.org&lt;/a&gt; it's very interesting.&lt;br&gt;I recommend to start with the last linked document, the Scipy Reference guide on the docs page.&lt;br&gt;Why? Because it has a tutorial for Numpy, Scipy and also introduces you to the plotting module 'matplotlib' at the same time! So really worth reading.&lt;br&gt;&lt;br&gt;Before I leave you alone in your python adventures (i put all links together again at the end), one more import comment for beginners confusion:&lt;br&gt;An import difference between numpy arrays (which look a lot like lists) and the original Python lists.&lt;br&gt;Python lists can take anything, so a list like this is possible:&lt;br&gt;&lt;br&gt;myList = ['aString', 3.1415, (atuple, atuple)]&lt;br&gt;&lt;br&gt;but the Python compiler needs some time to be able to deal with all this different things, so if one wants efficient arrays that only deal with the same type of elements at a time, then one needs numpy arrays.&lt;br&gt;So one important difference is the type of elements (many in Python lists, only one for numpy arrays), the other is how they react on mathematical operations.&lt;br&gt;&lt;br&gt;For Python lists it can be quite handy, that it is possible to do:&lt;br&gt;[3,4]*3&lt;br&gt;to get&lt;br&gt;[3,4,3,4,3,4]&lt;br&gt;&lt;br&gt;For writing text files in certain formats this is quite useful.&lt;br&gt;But for scientific calculations that doesn't make any sense of course, that's why numpy arrays do exactly what you expect for this:&lt;br&gt;&lt;br&gt;import numpy as np&lt;br&gt;a = np.array([3,4])&lt;br&gt;print a*3&lt;br&gt;&lt;br&gt;and you get&lt;br&gt;array([9, 12])&lt;br&gt;&lt;br&gt;What you saw here as well, that the np.array function can transform normal Python lists to numpy arrays without problems (that also works the other way around in case you need it).&lt;br&gt;&lt;br&gt;Ok, have fun in Python and don't shy to ask questions, the Python community is very helpful, I think because everybody is so happy about it. ;)&lt;br&gt;&lt;br&gt;Here are the promised links of all important Python websites for scientists:&lt;br&gt;&lt;br&gt;&lt;a href="http://www.enthought.com/"&gt;http://www.enthought.com&lt;/a&gt;&lt;br&gt;(to get a full scientific Python environment, that runs exactly the same on Win, Mac and Linux)&lt;br&gt;&lt;a href="http://docs.python.org/"&gt;http://docs.python.org&lt;/a&gt;&lt;br&gt;(Overview of only the core Python stuff itself, home of the Tutorial !)&lt;br&gt;&lt;a href="http://www.scipy.org/"&gt;http://www.scipy.org&lt;/a&gt;&lt;br&gt;(the home of Scientific Python, very nice to browse through...)&lt;br&gt;&lt;a href="http://docs.scipy.org/doc/"&gt;http://docs.scipy.org/doc/&lt;/a&gt;&lt;br&gt;(the docs page of scipy)&lt;br&gt;&lt;a href="http://matplotlib.sourceforge.net/"&gt;http://matplotlib.sourceforge.net/&lt;/a&gt;&lt;br&gt;(The home of the matplotlib Python module, a very powerful plotting library. I always look at the gallery to find what I need and one get's the example code for each graph! Very helpful)&lt;br&gt;&lt;br&gt;Maybe one last tip: The enthought environment installs an Examples folder as well, so you get a lot of example code installed on your computer, for the times when you are not online!&lt;br&gt;&lt;br&gt;Now, enjoy!&lt;/p&gt;</description><guid>http://michaelaye.blogspot.com/posts/201102scientific-python-starter.html</guid><pubDate>Fri, 25 Feb 2011 18:53:00 GMT</pubDate></item><item><title>NO_TITLE</title><link>http://michaelaye.blogspot.com/posts/201102i-was-getting-lot-of-mds-related-errors.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;div&gt;I was getting a lot of MDS related errors in my system logfile (visible via the Console.app in Mac).&lt;/div&gt;&lt;div&gt;Like these:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Feb 25 12:42:00 paradigm /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/dotmacfx.app/Contents/MacOS/dotmacfx[89682]: MDS Error: unable to create user DBs in /var/folders/PO/PO-GUydDF4mpVHTQxsRatE+++TI/-Caches-//mds&lt;/div&gt;&lt;div&gt;Feb 25 12:42:02 paradigm /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/dotmacfx.app/Contents/MacOS/dotmacfx[89699]: MDS Error: unable to create user DBs in /var/folders/PO/PO-GUydDF4mpVHTQxsRatE+++TI/-Caches-//mds&lt;/div&gt;&lt;div&gt;Feb 25 12:42:34 paradigm /System/Library/PrivateFrameworks/GoogleContactSync.framework/Versions/A/Resources/gconsync[89761]: MDS Error: unable to create user DBs in /var/folders/PO/PO-GUydDF4mpVHTQxsRatE+++TI/-Caches-//mds&lt;/div&gt;&lt;div&gt;Feb 25 12:55:34 paradigm /System/Library/Frameworks/PubSub.framework/Versions/A/Resources/PubSubAgent.app/Contents/MacOS/PubSubAgent[91445]: MDS Error: unable to create user DBs in /var/folders/PO/PO-GUydDF4mpVHTQxsRatE+++TI/-Caches-//mds&lt;/div&gt;&lt;div&gt;Feb 25 12:59:30 paradigm /Applications/Safari.app/Contents/Safari Webpage Preview Fetcher[91954]: MDS Error: unable to create user DBs in /var/folders/PO/PO-GUydDF4mpVHTQxsRatE+++TI/-Caches-//mds&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;and many more.&lt;/div&gt;&lt;div&gt;I thought that can't be good for performance so I digged around a bit and found that the caches of the kernel modules can become a bit problematic after security updates from Apple.&lt;/div&gt;&lt;div&gt;But there is a very simple remedy: Boot in safe mode, because then the caches are automatically deleted and renewed at the next boot.&lt;/div&gt;&lt;div&gt;To do that you keep pressing the SHIFT key while rebooting. Once you are fully booted into safe mode, just restart again and you will see (if you are as sensitive as me to the snappiness of a GUI) that things move a tad snappier now, like it was when the Mac was still fresh. ;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Good luck!&lt;/div&gt;</description><guid>http://michaelaye.blogspot.com/posts/201102i-was-getting-lot-of-mds-related-errors.html</guid><pubDate>Fri, 25 Feb 2011 13:36:00 GMT</pubDate></item><item><title>Find out on which computer you are 'python-ing'</title><link>http://michaelaye.blogspot.com/posts/201102find-out-on-which-computer-you-are.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;p&gt;Often, data is stored at different locations, depending on which computer the code is running.&lt;br&gt;To find out one can use the sys module like this:&lt;br&gt;&lt;br&gt;&lt;br&gt;import sys&lt;br&gt;if sys.platform == 'darwin':&lt;br&gt;    base = '/Users/aye/Data/hirise/'&lt;br&gt;else:&lt;br&gt;    base = '/processed_data/'&lt;br&gt;&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;</description><guid>http://michaelaye.blogspot.com/posts/201102find-out-on-which-computer-you-are.html</guid><pubDate>Fri, 25 Feb 2011 11:39:00 GMT</pubDate></item><item><title>Great Python resource!</title><link>http://michaelaye.blogspot.com/posts/201102great-python-resource.html</link><dc:creator>Michael Aye</dc:creator><description>&lt;p&gt;This site diggs through many useful stuff of the Python standard library.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.doughellmann.com/PyMOTW/contents.html"&gt;http://www.doughellmann.com/PyMOTW/contents.html&lt;/a&gt;&lt;/p&gt;</description><guid>http://michaelaye.blogspot.com/posts/201102great-python-resource.html</guid><pubDate>Thu, 24 Feb 2011 19:46:00 GMT</pubDate></item></channel></rss>